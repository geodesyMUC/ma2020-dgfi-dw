function [resultM] = writeResultMatrix(t_trend,trends, doITRFjump, KK, p, outl_factor, rms_enu, wrms_enu)
%writeResultMatrix writes results of the IRLS to a csv file
%   INPUT

% % use parameters in file name
% resultSaveFile = fullfile(logFileFolder, [stationname, ...
%     sprintf('_itrf%d_KK%d_p%.1f_outl%d', doITRFjump,KK, p, outl_factor), ...
%     '.csv']); % output: file name of computed trends (csv)

% Set up matrix with results and LSE parameters
resultM = [posixtime(t_trend'),  trends];
resultM = [[200, result_parameters{1, 2}{2, 2}, result_parameters{2, 2}{2, 2}, result_parameters{3, 2}{2, 2}]; ...
    resultM]; % 200: WRMS (third line)
resultM = [[100, result_parameters{1, 2}{1, 2}, result_parameters{2, 2}{1, 2}, result_parameters{3, 2}{1, 2}]; ...
    resultM]; % 100: RMS (second line)
resultM = [[doITRFjump, KK, p, outl_factor]; resultM]; % LSE parameters (first line)


% Set up matrix with results and LSE parameters
resultM = [posixtime(t_trend'),  trends];
resultM = [[200, result_parameters{1, 2}{2, 2}, result_parameters{2, 2}{2, 2}, result_parameters{3, 2}{2, 2}]; ...
    resultM]; % 200: WRMS (third line)
resultM = [[100, result_parameters{1, 2}{1, 2}, result_parameters{2, 2}{1, 2}, result_parameters{3, 2}{1, 2}]; ...
    resultM]; % 100: RMS (second line)
resultM = [[doITRFjump, KK, p, outl_factor]; resultM]; % LSE parameters (first line)

% % write matrix to csv file
% %writematrix(resultM, resultSaveFile, 'Delimiter', 'comma') % R2019a
% csvwrite(resultSaveFile, resultM); % R2006

end

