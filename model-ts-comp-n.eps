%!PS-Adobe-3.0 EPSF-3.0
%Produced by poppler pdftops version: 0.86.1 (http://poppler.freedesktop.org)
%%Creator: \050MATLAB, The Mathworks, Inc. Version 9.6.0.1335978 \\(R2019a\\) Update 8. Operating System: Windows 10)
%%LanguageLevel: 2
%%DocumentSuppliedResources: (atend)
%%BoundingBox: 0 0 359 180
%%HiResBoundingBox: 0 0 359 180
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
%%BeginResource: procset xpdf 3.00 0
%%Copyright: Copyright 1996-2011 Glyph & Cog, LLC
/xpdf 75 dict def xpdf begin
% PDF special state
/pdfDictSize 15 def
/pdfSetup {
  /setpagedevice where {
    pop 2 dict begin
      /Policies 1 dict dup begin /PageSize 6 def end def
      { /Duplex true def } if
    currentdict end setpagedevice
  } {
    pop
  } ifelse
} def
/pdfSetupPaper {
  % Change paper size, but only if different from previous paper size otherwise
  % duplex fails. PLRM specifies a tolerance of 5 pts when matching paper size
  % so we use the same when checking if the size changes.
  /setpagedevice where {
    pop currentpagedevice
    /PageSize known {
      2 copy
      currentpagedevice /PageSize get aload pop
      exch 4 1 roll
      sub abs 5 gt
      3 1 roll
      sub abs 5 gt
      or
    } {
      true
    } ifelse
    {
      2 array astore
      2 dict begin
        /PageSize exch def
        /ImagingBBox null def
      currentdict end
      setpagedevice
    } {
      pop pop
    } ifelse
  } {
    pop
  } ifelse
} def
/pdfStartPage {
  pdfDictSize dict begin
  /pdfFillCS [] def
  /pdfFillXform {} def
  /pdfStrokeCS [] def
  /pdfStrokeXform {} def
  /pdfFill [0] def
  /pdfStroke [0] def
  /pdfFillOP false def
  /pdfStrokeOP false def
  /pdfLastFill false def
  /pdfLastStroke false def
  /pdfTextMat [1 0 0 1 0 0] def
  /pdfFontSize 0 def
  /pdfCharSpacing 0 def
  /pdfTextRender 0 def
  /pdfPatternCS false def
  /pdfTextRise 0 def
  /pdfWordSpacing 0 def
  /pdfHorizScaling 1 def
  /pdfTextClipPath [] def
} def
/pdfEndPage { end } def
% PDF color state
/cs { /pdfFillXform exch def dup /pdfFillCS exch def
      setcolorspace } def
/CS { /pdfStrokeXform exch def dup /pdfStrokeCS exch def
      setcolorspace } def
/sc { pdfLastFill not { pdfFillCS setcolorspace } if
      dup /pdfFill exch def aload pop pdfFillXform setcolor
     /pdfLastFill true def /pdfLastStroke false def } def
/SC { pdfLastStroke not { pdfStrokeCS setcolorspace } if
      dup /pdfStroke exch def aload pop pdfStrokeXform setcolor
     /pdfLastStroke true def /pdfLastFill false def } def
/op { /pdfFillOP exch def
      pdfLastFill { pdfFillOP setoverprint } if } def
/OP { /pdfStrokeOP exch def
      pdfLastStroke { pdfStrokeOP setoverprint } if } def
/fCol {
  pdfLastFill not {
    pdfFillCS setcolorspace
    pdfFill aload pop pdfFillXform setcolor
    pdfFillOP setoverprint
    /pdfLastFill true def /pdfLastStroke false def
  } if
} def
/sCol {
  pdfLastStroke not {
    pdfStrokeCS setcolorspace
    pdfStroke aload pop pdfStrokeXform setcolor
    pdfStrokeOP setoverprint
    /pdfLastStroke true def /pdfLastFill false def
  } if
} def
% build a font
/pdfMakeFont {
  4 3 roll findfont
  4 2 roll matrix scale makefont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /Encoding exch def
    currentdict
  end
  definefont pop
} def
/pdfMakeFont16 {
  exch findfont
  dup length dict begin
    { 1 index /FID ne { def } { pop pop } ifelse } forall
    /WMode exch def
    currentdict
  end
  definefont pop
} def
% graphics state operators
/q { gsave pdfDictSize dict begin } def
/Q {
  end grestore
  /pdfLastFill where {
    pop
    pdfLastFill {
      pdfFillOP setoverprint
    } {
      pdfStrokeOP setoverprint
    } ifelse
  } if
} def
/cm { concat } def
/d { setdash } def
/i { setflat } def
/j { setlinejoin } def
/J { setlinecap } def
/M { setmiterlimit } def
/w { setlinewidth } def
% path segment operators
/m { moveto } def
/l { lineto } def
/c { curveto } def
/re { 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
      neg 0 rlineto closepath } def
/h { closepath } def
% path painting operators
/S { sCol stroke } def
/Sf { fCol stroke } def
/f { fCol fill } def
/f* { fCol eofill } def
% clipping operators
/W { clip newpath } def
/W* { eoclip newpath } def
/Ws { strokepath clip newpath } def
% text state operators
/Tc { /pdfCharSpacing exch def } def
/Tf { dup /pdfFontSize exch def
      dup pdfHorizScaling mul exch matrix scale
      pdfTextMat matrix concatmatrix dup 4 0 put dup 5 0 put
      exch findfont exch makefont setfont } def
/Tr { /pdfTextRender exch def } def
/Tp { /pdfPatternCS exch def } def
/Ts { /pdfTextRise exch def } def
/Tw { /pdfWordSpacing exch def } def
/Tz { /pdfHorizScaling exch def } def
% text positioning operators
/Td { pdfTextMat transform moveto } def
/Tm { /pdfTextMat exch def } def
% text string operators
/xyshow where {
  pop
  /xyshow2 {
    dup length array
    0 2 2 index length 1 sub {
      2 index 1 index 2 copy get 3 1 roll 1 add get
      pdfTextMat dtransform
      4 2 roll 2 copy 6 5 roll put 1 add 3 1 roll dup 4 2 roll put
    } for
    exch pop
    xyshow
  } def
}{
  /xyshow2 {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval show moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval show moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/cshow where {
  pop
  /xycp {
    0 3 2 roll
    {
      pop pop currentpoint 3 2 roll
      1 string dup 0 4 3 roll put false charpath moveto
      2 copy get 2 index 2 index 1 add get
      pdfTextMat dtransform rmoveto
      2 add
    } exch cshow
    pop pop
  } def
}{
  /xycp {
    currentfont /FontType get 0 eq {
      0 2 3 index length 1 sub {
        currentpoint 4 index 3 index 2 getinterval false charpath moveto
        2 copy get 2 index 3 2 roll 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } {
      0 1 3 index length 1 sub {
        currentpoint 4 index 3 index 1 getinterval false charpath moveto
        2 copy 2 mul get 2 index 3 2 roll 2 mul 1 add get
        pdfTextMat dtransform rmoveto
      } for
    } ifelse
    pop pop
  } def
} ifelse
/Tj {
  fCol
  0 pdfTextRise pdfTextMat dtransform rmoveto
  currentpoint 4 2 roll
  pdfTextRender 1 and 0 eq {
    2 copy xyshow2
  } if
  pdfTextRender 3 and dup 1 eq exch 2 eq or {
    3 index 3 index moveto
    2 copy
    currentfont /FontType get 3 eq { fCol } { sCol } ifelse
    xycp currentpoint stroke moveto
  } if
  pdfTextRender 4 and 0 ne {
    4 2 roll moveto xycp
    /pdfTextClipPath [ pdfTextClipPath aload pop
      {/moveto cvx}
      {/lineto cvx}
      {/curveto cvx}
      {/closepath cvx}
    pathforall ] def
    currentpoint newpath moveto
  } {
    pop pop pop pop
  } ifelse
  0 pdfTextRise neg pdfTextMat dtransform rmoveto
} def
/TJm { 0.001 mul pdfFontSize mul pdfHorizScaling mul neg 0
       pdfTextMat dtransform rmoveto } def
/TJmV { 0.001 mul pdfFontSize mul neg 0 exch
        pdfTextMat dtransform rmoveto } def
/Tclip { pdfTextClipPath cvx exec clip newpath
         /pdfTextClipPath [] def } def
/Tclip* { pdfTextClipPath cvx exec eoclip newpath
         /pdfTextClipPath [] def } def
% Level 2/3 image operators
/pdfImBuf 100 string def
/pdfImStr {
  2 copy exch length lt {
    2 copy get exch 1 add exch
  } {
    ()
  } ifelse
} def
/skipEOD {
  { currentfile pdfImBuf readline
    not { pop exit } if
    (%-EOD-) eq { exit } if } loop
} def
/pdfIm { image skipEOD } def
/pdfImM { fCol imagemask skipEOD } def
/pr { 2 index 2 index 3 2 roll putinterval 4 add } def
/pdfImClip {
  gsave
  0 2 4 index length 1 sub {
    dup 4 index exch 2 copy
    get 5 index div put
    1 add 3 index exch 2 copy
    get 3 index div put
  } for
  pop pop rectclip
} def
/pdfImClipEnd { grestore } def
% shading operators
/colordelta {
  false 0 1 3 index length 1 sub {
    dup 4 index exch get 3 index 3 2 roll get sub abs 0.004 gt {
      pop true
    } if
  } for
  exch pop exch pop
} def
/funcCol { func n array astore } def
/funcSH {
  dup 0 eq {
    true
  } {
    dup 6 eq {
      false
    } {
      4 index 4 index funcCol dup
      6 index 4 index funcCol dup
      3 1 roll colordelta 3 1 roll
      5 index 5 index funcCol dup
      3 1 roll colordelta 3 1 roll
      6 index 8 index funcCol dup
      3 1 roll colordelta 3 1 roll
      colordelta or or or
    } ifelse
  } ifelse
  {
    1 add
    4 index 3 index add 0.5 mul exch 4 index 3 index add 0.5 mul exch
    6 index 6 index 4 index 4 index 4 index funcSH
    2 index 6 index 6 index 4 index 4 index funcSH
    6 index 2 index 4 index 6 index 4 index funcSH
    5 3 roll 3 2 roll funcSH pop pop
  } {
    pop 3 index 2 index add 0.5 mul 3 index  2 index add 0.5 mul
    funcCol sc
    dup 4 index exch mat transform m
    3 index 3 index mat transform l
    1 index 3 index mat transform l
    mat transform l pop pop h f*
  } ifelse
} def
/axialCol {
  dup 0 lt {
    pop t0
  } {
    dup 1 gt {
      pop t1
    } {
      dt mul t0 add
    } ifelse
  } ifelse
  func n array astore
} def
/axialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index axialCol 2 index axialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index axialSH
    exch 3 2 roll axialSH
  } {
    pop 2 copy add 0.5 mul
    axialCol sc
    exch dup dx mul x0 add exch dy mul y0 add
    3 2 roll dup dx mul x0 add exch dy mul y0 add
    dx abs dy abs ge {
      2 copy yMin sub dy mul dx div add yMin m
      yMax sub dy mul dx div add yMax l
      2 copy yMax sub dy mul dx div add yMax l
      yMin sub dy mul dx div add yMin l
      h f*
    } {
      exch 2 copy xMin sub dx mul dy div add xMin exch m
      xMax sub dx mul dy div add xMax exch l
      exch 2 copy xMax sub dx mul dy div add xMax exch l
      xMin sub dx mul dy div add xMin exch l
      h f*
    } ifelse
  } ifelse
} def
/radialCol {
  dup t0 lt {
    pop t0
  } {
    dup t1 gt {
      pop t1
    } if
  } ifelse
  func n array astore
} def
/radialSH {
  dup 0 eq {
    true
  } {
    dup 8 eq {
      false
    } {
      2 index dt mul t0 add radialCol
      2 index dt mul t0 add radialCol colordelta
    } ifelse
  } ifelse
  {
    1 add 3 1 roll 2 copy add 0.5 mul
    dup 4 3 roll exch 4 index radialSH
    exch 3 2 roll radialSH
  } {
    pop 2 copy add 0.5 mul dt mul t0 add
    radialCol sc
    encl {
      exch dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      0 360 arc h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      360 0 arcn h f
    } {
      2 copy
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arcn
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arcn h
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a1 a2 arc
      dup dx mul x0 add exch dup dy mul y0 add exch dr mul r0 add
      a2 a1 arc h f
    } ifelse
  } ifelse
} def
end
%%EndResource
%%EndProlog
%%BeginSetup
xpdf begin
%%BeginResource: font OMIUSW+Helvetica
%!FontType1-1.0: OMIUSW+Helvetica
12 dict begin
/FontInfo 10 dict dup begin
/Notice (\(URW\)++,Copyright 2014 by \(URW\)++ Design & Development) readonly def
/Copyright (Copyright \(URW\)++,Copyright 2014 by \(URW\)++ Design & Develo\
pment) readonly def
/FullName (Nimbus Sans) readonly def
/FamilyName (Nimbus Sans) readonly def
/isFixedPitch false def
/ItalicAngle 0 def
/UnderlinePosition 0 def
/UnderlineThickness 0 def
end readonly def
/FontName /OMIUSW+Helvetica def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/FontBBox [0 -218 762 741] readonly def
/StrokeWidth 0 def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 32 /space put
dup 45 /hyphen put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 54 /six put
dup 56 /eight put
dup 77 /M put
dup 78 /N put
dup 82 /R put
dup 83 /S put
dup 91 /bracketleft put
dup 93 /bracketright put
dup 101 /e put
dup 103 /g put
dup 104 /h put
dup 108 /l put
dup 109 /m put
dup 111 /o put
dup 112 /p put
dup 114 /r put
dup 116 /t put
dup 120 /x put
readonly def
currentdict end
currentfile eexec
5AA4F71255501637F1A431BAB555283D093E1B588B45B0281559110D21315C62
BD638C6B34BA54AA75227715D9947EBCD51A104CAEA657499E94138F5645BF68
368BB1B1EC8E4776F067FFF2CE9B89FB7E63A7DB304498C1036D399C47A4CB79
BD517EDB02BEB90195FD7DDAF3E839BCE2DB156D9337DBB2305A465B3E0FFB97
1985C79DC71C47E26F9F0F042B2CDEE97B679358059256FB93D662D43C7ECB5B
1A564DFCECB963478373C69F52172F071E0AA6082A3E10D9E1CE2851CFA210EE
7BD5FCB1AAE15E89D1FB339D587D218B89C18A32F47C7451A80CB1FC07CF5EF6
FB39B30D1F8747CF302EAFC179F06E5D11CA91B74F4900A8E3BB60AE146088CD
80855E68DF6050B060DA60DDB63DE453ABB4DC3977B973C6F2F30983D64B5A78
903AEDDF9961E7E49B297C93BE291DCD3CFAFD71AE4403CD6B8146DDC3F3E6C5
305E5E77618A5209F83961088A67FE0F6C76C9BB8E9FE5F3A15F6A14201362BA
DA28D8AB966D6518B5A8694B2654089FE00D86C0A7AE42411274EE55A1E0BAFD
F224E724525A32C38BF7C3DE517DC5968302957D86302CF6A3C3C3DEFBBB081F
36DEA19871146EC78EB3662EE8925B15B0C02C4563F7CE1442C66B633225CEA5
1D0B9D463E4F66855A101CEC3CC5EF85066750BA63D134E4578413B030C8BA11
781F62A464FDAB6DE9B2EAF67B2DDCBBAF3E72820D3B9BA7886EC6B9A156613B
48D7C835CC1B0560A01EA275EB25A06EA9C55DA4B84E6F4D08AAEA932CA9F4F6
9FFA25282C8F5F6122CAE6F0DAADBAF74E8DFC4707D9A5910D5DB03F76332008
8CDE210CE663661CE526C9A466F750C24922FF598219B78B7C18E2EEEC1A13FA
C8C15FD0ADB1D428773A1899C6B651134104AA3F73132D4B326160C7A342C28B
6BAED561B4D05E10E7B3958412D726FDE9CA8AE08E4E2174E4835FF07E7ED168
BC3CA61AD927D2C53A0916479F1F1E88E5E7E746925AF1F629948DFDD21A1020
1F3F7EEB9F096F0BBCAA99FE79024041D68FB2E0C9215D90C7376737B10132D7
2B9C02A4B832DD09B61E26E2A3ED6D0A92897169CBAC06766F9601CC094195C1
B386B3831D8B661A9992B00279A2317C1EE04C5AAC5FEA266AF5F741230113C3
A9C15A16FB6A23B5F3AE17B4632772921FDDEAFDCA8F14A35E120BCB781E20DA
EC541C82B72AC2264EBE3820B35E2EB5EB2009188261211C0E4D96CF0F2B4D25
EDEF20D2795E9437356BE925755064AC60C1702FF6022977842D9160B535B145
2FE53A24385C588E791A9FFBB18CCE75B0C7C84C2CF1CBA9011061FA0313B67A
FA9CE54B3AA56FD3CF8ECD4F31CC09908B6071B4184B774EDF1A7E8B75F4577C
F6F7123E7622FEEFE5595F4A62DFBF9C323F494962A69783E933E0BF2D2FD4E8
4DF930253BCBBE463F1549A2DBA2B6DD02382A632F917B95FD8FFA9B47B4D12B
5B1689C51C8A9DEFBF2A986779339B61B6481E65AD25B78C0E36E715C100CC5C
1A2598E382475A4DD1117C7B9DEFE5EFD9BBAB759536DC8F1C4AC62065EE9839
93E85564D5F6BABB2B0EB98C913E1AFAB4E085090D26C6E634396F1BA613B2EF
6613A5E1E3B10886EDD4C480844B371FD2F08F853C589976398E6F2A81959706
9CEAA514CBFA12C164EB48C78EA35F522DA4519F1900339702407B293D8A6037
BA514E71504867A432D62029AF22C49EF869201C288AD0CAB083852B172873F4
8ED262D385AE64F9ED33AFB0AB0026BEF95376D38BE91BC1CF2F3C7ABF8FFA07
722884C7FBBA3B508815611A65C1A7A2ED09B604B7CC3B67E6F87624672004CF
5E71FED72FA26C99AA48112DAF297BB901FFB2C2833B8EAE4789C9D6F0DA0C8A
540150C3AC749B586594C3D1926DD3CE25BB9E92F80B3D3889F952317099B795
323554CAEB3BDC2C0782F8826517D3B0FAC9B2BDB24C8F24963045877B12951C
5678E46627656C7C278E1DFF09AEF74044800293181EDDD26B47109B8A5143DE
E13EE62E13335D8FBD2599DB094E6850545C31DB10011878EC37A42E9D6F8C30
FC0241F1290331556F1986DF83AE7DFA00EA0207FA6A07E0F2D18F0C9175CD4F
E5A5670AE9291C1DF85357F023E0E2E41CF4909B4C4514C31823E3D7CE6C9168
A0B9E40656794922BFABCCE34F3E94A84478F1E2C729D67887757321C03B978A
7DBCE61FE7DFEA85E30F65E289D007231FCA19ECAB46856948F95EE26DBB1097
156E8F17C7369788285F93FE267A3EAE75E79FE87D1299AB511B0A5EBDC9FB11
CACFEB5B8DC46F24CB02581F94460EE1CD80510D43E40FDA43BDD1BCE1B80ACC
8DA6F71F6A35FCC219DFB383E973BB6A66EB2EC4F2DE83B92CCABC118A50BBC0
94EED776039225BDE7F7BBE79756627EB46D825F9DDF6E2326EBFAA70CF1661C
2D2E71A98AED888687CF0E1F661E2E1C607361DE68919D2BAAA04DED45178F57
BE7A08CA1A2335ED383C6594B30197970E7CBDBEABB88A89AA5811959514A4AD
C63415F905820CE78E55C18AD0627D6E6F125421010F20F9CF043B32B3D3B1F1
47911BB30864F03F78D1BBF7FCD9F9137E961F5A045CBAAC5137BE485AA88475
FC364385C113FD3AAC2C5BF668F874FA4590C27AE8D7A1761B0E794748126A02
04BB17909179FCDE18C9478665BDB2BC3878E9927D3FF933D7C11B7491E4B9A6
6C2AD4BC70185ED22F52C2549C03A79EE8C0F2440947AC99CF25C0EFC4A9491C
0D295EDA062C398D906F01611C94E9B2EEBC97C0C05BE2FE9861308258EE4668
45E01C8288FD58E207D803C45D91774D954915F5204544622FDD255B32E261BD
ECA1BD0D476972D3CD9F90DABC55D1665F366F7CA7FDBF2ACAB683142C5CEF0D
1FD5765EBE3832887B460E83F80FA52D8C153126A7132BC5C81597C834D3CC7B
6D1014E1A158D8E3B7C76213118ED877B6BCE85940DF3D035840979AD59E7558
5F9CD83552542377843CB5C941077C97B3558F86A387BBB000514E6B0165F770
E3AB2CAA66279751C0A4D6269567065423FB4A49C22EA2296CE5D807C8FA6FD6
0E8D9ED1AF30015B60F9351E42C42DB628364EBED1941C267239B4C177753A60
5E64F10B1AAFD87A4CB73C28D6D7ABAB4B8AFFC54F2A8B5DEF06D8ED51E6631E
E89CB588E5FBE5393B7BA126D194E42284623EAF9B9A3AAEF4C4322200C2FF42
9A362833FB956E93BD778D3CC397AC5A40A87409F14C1EDE5E767873542CD964
BEDC7047B6182BBED304FBB7E53964AD1B419D6D59FE5A5C9A7759B72B03E408
2FBC838BF835E38DBFD1BE5DE327BAE163781E41B1C49CEFA3F0FFD03BAB0048
E0B417530169B808A3B4222171D3E0B157E20E5DEF1AA3FF37B92CAFBB6E589C
B9AB2BE83FF18BA2ADBF0111D1090C6C97BB250FB3D6932AFA6A01FF53BE177A
87168008694E1B65F2306F3C5F9B05DD0BCFE232E52C83CA93C0E90863C378B1
6A2CEAD2654783DB30F882A8A13D8BF5B3FE6904B4C7286A37AB256099981F82
F291A0B674EEBC5A4764D2B68E16AC67667615D5BAE9E09B7D9AEB03DA5BDC6F
C2EB1CAB4286A5AB802D1CAE0D1FDA90BC4B561C86FAFA76399A49C21B8C246C
6FECA699727B68527225A16C058E2CD049A4C2822E021417C75D53A4EDF74A72
BAA6B08AB54BC2A19DAEA1FDE3D2217BE6344F84269C4F1B0444897AFB652B3E
BC6CA90682AD567BAA3E41200AB1172AEAC100DE98CF5683B56CF5EB46DAE1F1
4B10693D636B3A4CAFBC94E95BA66C98EBA36B352B9E7C5A2BFDCB51DEDF291B
9B19FF8ABACB7262E8F5457025C5270C5F787FCE8ABF7119F741B36E5F9B6E47
9AD5F092FCFD1FDE4E62D19614EB0F456D9E6C3C65A9A1DFE6F0B1E79A06028D
13E3EE0382CC9C4C27851433E8EF67928AB1200912B1B7CE2A35D52F46E200DD
61C40D01968D38AD2230B05C
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndResource
/F7_0 /OMIUSW+Helvetica 1 1
[ /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
  /space/exclam/quotedbl/numbersign/dollar/percent/ampersand/quotesingle
  /parenleft/parenright/asterisk/plus/comma/hyphen/period/slash
  /zero/one/two/three/four/five/six/seven
  /eight/nine/colon/semicolon/less/equal/greater/question
  /at/A/B/C/D/E/F/G
  /H/I/J/K/L/M/N/O
  /P/Q/R/S/T/U/V/W
  /X/Y/Z/bracketleft/backslash/bracketright/asciicircum/underscore
  /grave/a/b/c/d/e/f/g
  /h/i/j/k/l/m/n/o
  /p/q/r/s/t/u/v/w
  /x/y/z/braceleft/bar/braceright/asciitilde/bullet
  /Euro/bullet/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
  /circumflex/perthousand/Scaron/guilsinglleft/OE/bullet/Zcaron/bullet
  /bullet/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
  /tilde/trademark/scaron/guilsinglright/oe/bullet/zcaron/Ydieresis
  /space/exclamdown/cent/sterling/currency/yen/brokenbar/section
  /dieresis/copyright/ordfeminine/guillemotleft/logicalnot/hyphen/registered/macron
  /degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
  /cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
  /Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
  /Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
  /Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
  /Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
  /agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
  /egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
  /eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
  /oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]
pdfMakeFont
%%EndSetup
pdfStartPage
%%EndPageSetup
[] 0 d
1 i
0 j
0 J
10 M
1 w
/DeviceGray {} cs
[0] sc
/DeviceGray {} CS
[0] SC
false op
false OP
{} settransfer
0 0 359 180 re
W
q
q
[0.1 0 0 0.1 0 0] cm
/DeviceGray {} cs
[0.9394] sc
-240 -20 4200 1837.5 re
f
/DeviceGray {} cs
[0.9414] sc
-240 -20 4200 1837.5 re
f
/DeviceGray {} cs
[1] sc
307.5 182.5 3255 1470 re
f
5.0025 w
1 j
/DeviceGray {} CS
[0.873] SC
3562.5 404.508 m
307.5 404.508 l
S
3562.5 704.449 m
307.5 704.449 l
S
3562.5 1004.39 m
307.5 1004.39 l
S
3562.5 1304.34 m
307.5 1304.34 l
S
3562.5 1604.27 m
307.5 1604.27 l
S
2 J
/DeviceGray {} CS
[0.1489] SC
307.5 182.5 m
3562.5 182.5 l
S
307.5 1652.5 m
3562.5 1652.5 l
S
488.332 182.5 m
488.332 215.051 l
S
849.996 182.5 m
849.996 215.051 l
S
1211.67 182.5 m
1211.67 215.051 l
S
1573.34 182.5 m
1573.34 215.051 l
S
1935 182.5 m
1935 215.051 l
S
2296.66 182.5 m
2296.66 215.051 l
S
2658.33 182.5 m
2658.33 215.051 l
S
3020 182.5 m
3020 215.051 l
S
3381.67 182.5 m
3381.67 215.051 l
S
488.332 1652.5 m
488.332 1619.95 l
S
849.996 1652.5 m
849.996 1619.95 l
S
1211.67 1652.5 m
1211.67 1619.95 l
S
1573.34 1652.5 m
1573.34 1619.95 l
S
1935 1652.5 m
1935 1619.95 l
S
2296.66 1652.5 m
2296.66 1619.95 l
S
2658.33 1652.5 m
2658.33 1619.95 l
S
3020 1652.5 m
3020 1619.95 l
S
3381.67 1652.5 m
3381.67 1619.95 l
S
/DeviceGray {} cs
[0.1489] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 34.5832 5.1] Tm
0 0 Td
/F7_0 9.50025 Tf
(log-log)
[2.109055
0
5.282139
0
5.282139
0
3.163583
0
2.109055
0
5.282139
0
5.282139
0] Tj
-490.15 TJm
(exp-exp)
[5.282139
0
4.750125
0
5.282139
0
3.163583
0
5.282139
0
4.750125
0
5.282139
0] Tj
-407.822 TJm
(log-exp)
[2.109055
0
5.282139
0
5.282139
0
3.163583
0
5.282139
0
4.750125
0
5.282139
0] Tj
-685.781 TJm
(log-log)
[2.109055
0
5.282139
0
5.282139
0
3.163583
0
2.109055
0
5.282139
0
5.282139
0] Tj
-490.15 TJm
(exp-exp)
[5.282139
0
4.750125
0
5.282139
0
3.163583
0
5.282139
0
4.750125
0
5.282139
0] Tj
-407.822 TJm
(log-exp)
[2.109055
0
5.282139
0
5.282139
0
3.163583
0
5.282139
0
4.750125
0
5.282139
0] Tj
-685.781 TJm
(log-log)
[2.109055
0
5.282139
0
5.282139
0
3.163583
0
2.109055
0
5.282139
0
5.282139
0] Tj
-490.15 TJm
(exp-exp)
[5.282139
0
4.750125
0
5.282139
0
3.163583
0
5.282139
0
4.750125
0
5.282139
0] Tj
-407.822 TJm
(log-exp)
[2.109055
0
5.282139
0
5.282139
0
3.163583
0
5.282139
0
4.750125
0
5.282139
0] Tj
Q
307.5 182.5 m
307.5 1652.5 l
S
3562.5 182.5 m
3562.5 1652.5 l
S
307.5 404.508 m
340.051 404.508 l
S
307.5 704.449 m
340.051 704.449 l
S
307.5 1004.39 m
340.051 1004.39 l
S
307.5 1304.34 m
340.051 1304.34 l
S
307.5 1604.27 m
340.051 1604.27 l
S
3562.5 404.508 m
3529.95 404.508 l
S
3562.5 704.449 m
3529.95 704.449 l
S
3562.5 1004.39 m
3529.95 1004.39 l
S
3562.5 1304.34 m
3529.95 1304.34 l
S
3562.5 1604.27 m
3529.95 1604.27 l
S
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 21.35 36.7008] Tm
0 0 Td
/F7_0 9.50025 Tf
(2)
[5.282139
0] Tj
0 29.9941 Td
(4)
[5.282139
0] Tj
0 59.9886 Td
(6)
[5.282139
0] Tj
0 89.9827 Td
(8)
[5.282139
0] Tj
-5.25 119.9768 Td
(10)
[5.282139
0
5.282139
0] Tj
[0 1 -1 0 10.6 67] Tm
0 0 Td
/F7_0 10.4497 Tf
(RMS [mm])
[7.544683
0
8.7046
0
6.96995
0
2.905017
0
2.905017
0
8.7046
0
8.7046
0
2.905017
0] Tj
Q
/DeviceGray {} cs
[0] sc
q
[10 0 0 10 0 0] cm
[1 0 0 1 0 0] Tm
0 0 Td
[1 0 0 1 180.375 170.2] Tm
0 0 Td
/F7_0 10.4497 Tf
(North)
[7.544683
0
5.810033
0
3.47975
0
2.905017
0
5.810033
0] Tj
Q
[75 45] 0 d
0 J
2 j
/DeviceGray {} CS
[0] SC
488.332 767.816 m
488.332 1164.41 l
S
849.996 831.625 m
849.996 1435.56 l
S
1211.67 765.754 m
1211.67 1141.91 l
S
1573.34 785.695 m
1573.34 1399.87 l
S
1935 837.551 m
1935 1405.87 l
S
2296.66 784.758 m
2296.66 1399.12 l
S
2658.33 842.914 m
2658.33 1400.02 l
S
3020 863.754 m
3020 1585.68 l
S
3381.67 843.289 m
3381.67 1402.42 l
S
488.332 322.621 m
488.332 361.09 l
S
849.996 345.273 m
849.996 366.379 l
S
1211.67 354.266 m
1211.67 375.152 l
S
1573.34 325.621 m
1573.34 354.715 l
S
1935 334.773 m
1935 357.641 l
S
2296.66 332.824 m
2296.66 352.988 l
S
2658.33 332.371 m
2658.33 358.953 l
S
3020 330.871 m
3020 362.703 l
S
3381.67 328.621 m
3381.67 359.852 l
S
[] 0 d
1 j
443.121 1164.41 m
533.543 1164.41 l
S
804.797 1435.56 m
895.207 1435.56 l
S
1166.46 1141.91 m
1256.87 1141.91 l
S
1528.13 1399.87 m
1618.55 1399.87 l
S
1889.79 1405.87 m
1980.21 1405.87 l
S
2251.46 1399.12 m
2341.88 1399.12 l
S
2613.13 1400.02 m
2703.54 1400.02 l
S
2974.79 1585.68 m
3065.21 1585.68 l
S
3336.46 1402.42 m
3426.88 1402.42 l
S
443.121 322.621 m
533.543 322.621 l
S
804.797 345.273 m
895.207 345.273 l
S
1166.46 354.266 m
1256.87 354.266 l
S
1528.13 325.621 m
1618.55 325.621 l
S
1889.79 334.773 m
1980.21 334.773 l
S
2251.46 332.824 m
2341.88 332.824 l
S
2613.13 332.371 m
2703.54 332.371 l
S
2974.79 330.871 m
3065.21 330.871 l
S
3336.46 328.621 m
3426.88 328.621 l
S
/DeviceRGB {} CS
[0 0 1] SC
397.922 361.09 180.832 406.726 re
S
759.586 366.379 180.832 465.246 re
S
1121.25 375.152 180.83 390.602 re
S
/DeviceRGB {} CS
[1 0 1] SC
1482.91 354.715 180.84 430.98 re
S
1844.58 357.641 180.84 479.91 re
S
2206.25 352.988 180.84 431.77 re
S
/DeviceRGB {} CS
[0 1 0] SC
2567.92 358.953 180.83 483.961 re
S
2929.58 362.703 180.83 501.051 re
S
3291.25 359.852 180.83 483.437 re
S
/DeviceRGB {} CS
[1 0 0] SC
397.922 540.086 m
578.754 540.086 l
S
759.586 634.113 m
940.418 634.113 l
S
1121.25 555.227 m
1302.08 555.227 l
S
1482.91 500.645 m
1663.75 500.645 l
S
1844.58 527.484 m
2025.42 527.484 l
S
2206.25 503.793 m
2387.09 503.793 l
S
2567.92 502.594 m
2748.75 502.594 l
S
2929.58 518.484 m
3110.41 518.484 l
S
3291.25 505.285 m
3472.08 505.285 l
S
7.5 w
2658.33 1612.38 m
2658.33 1552.38 l
2628.33 1582.38 m
2688.33 1582.38 l
S
3381.67 1610.73 m
3381.67 1550.73 l
3351.67 1580.73 m
3411.67 1580.73 l
S
Q
Q
showpage
%%PageTrailer
pdfEndPage
%%Trailer
end
%%DocumentSuppliedResources:
%%+ font OMIUSW+Helvetica
%%EOF
